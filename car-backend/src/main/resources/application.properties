# OpenAPI aktivieren
quarkus.smallrye-openapi.path=/openapi

# Swagger-UI aktivieren
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# Datenbank
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=car_user
quarkus.datasource.password=car_pass
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/car_db
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.format-sql=true

# Dev Services aktivieren (fÃ¼r einfache lokale Entwicklung)
quarkus.kafka.devservices.enabled=true

# ðŸ”¹ Kafka
kafka.bootstrap.servers:localhost:9092

# FÃ¼r lokale Entwicklung Kafka-Konfiguration
%prod.kafka.bootstrap.servers=redpanda-1:9092
%dev.kafka.bootstrap.servers=localhost:9092

# Messaging-Konfiguration explizit anpassen
mp.messaging.incoming.validation-responses.connector=smallrye-kafka
mp.messaging.incoming.validation-responses.topic=validation-responses
mp.messaging.incoming.validation-responses.bootstrap.servers=localhost:9092
mp.messaging.incoming.validation-responses.value.deserializer=com.example.dto.ValidationResponseDeserializer

mp.messaging.outgoing.validation-requests.connector=smallrye-kafka
mp.messaging.outgoing.validation-requests.topic=validation-requests
mp.messaging.outgoing.validation-requests.bootstrap.servers=localhost:9092
mp.messaging.outgoing.validation-requests.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer