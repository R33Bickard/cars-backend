name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build car-backend with Maven
        working-directory: car-backend
        run: |
          chmod +x mvnw
          ./mvnw clean package

      - name: Build text-validation with Maven
        working-directory: text-validation-service
        run: |
          chmod +x mvnw
          ./mvnw clean package

      - name: Build Docker Images
        run: |
          docker build -f car-backend/src/main/docker/Dockerfile.jvm -t ghcr.io/${{ toLowerCase(github.repository_owner) }}/car-backend:latest car-backend
          docker build -f text-validation-service/src/main/docker/Dockerfile.jvm -t ghcr.io/${{ toLowerCase(github.repository_owner) }}/text-validation-service:latest text-validation-service

  performance_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Artillery-Tests
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Artillery
        run: npm install -g artillery

      - name: Run Artillery Tests
        run: artillery run car-backend/src/test/java/com/example/artillery/car-loadtest.yml

      # JMeter-Tests
      - name: Run JMeter Tests
        uses: justb4/jmeter-action@v2
        with:
          jmxFile: car-backend/src/test/java/com/example/jmeter/car-loadtest.jmx
          java_opts: "-Xms512m -Xmx1024m"

      # Optional: Ergebnisse als Artefakte speichern
      - name: Upload Artillery Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artillery-report
          path: ./artillery-report.json
